# Name of the workflow
name: Build
# Controls what will trigger the workflow.
# Change it to your needs.
on:
  push:
    tags:
      - "*.*.*" # on every version tag will build a new android artifact example: v3.1.2+6
permissions:
  contents: write

# A single workflow can have multiple jobs.
jobs:
  # 'A new job is defined with the name: "build_android"
  build_android:
    # Defines what operating system will be used for the actions.
    # For android, we will use Linux GitHub-Hosted Runner.
    runs-on: ubuntu-latest
    # Defines what step should be passed for successful run
    steps:
      # Checkout to the selected branch
      - name: Checkout
        uses: actions/checkout@v3
      # Download and install flutter packages
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          # Define which stable flutter version should be used
          flutter-version: "3.19.6"# "3.7.0"
          channel: 'stable'
          # Enables cache for flutter packages
          # Speed up the process
          cache: true
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
          check-latest: true
      # Get Flutter project dependencies
      - name: Get dependencies
        run: flutter pub get
      - name: Build release app apk
        run: flutter build apk
      #      - name: Releasing
      #        uses: sangatdesai/release-apk@main
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      #          APP_FOLDER: build
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
